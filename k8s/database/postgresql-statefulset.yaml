apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: health-export
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      component: database
  template:
    metadata:
      labels:
        app: postgresql
        component: database
    spec:
      containers:
        - name: postgresql
          image: postgis/postgis:15-3.3
          imagePullPolicy: Always
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "scram-sha-256"
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          args:
            - "postgres"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.track=all"
            - "-c"
            - "log_destination=stderr"
            - "-c"
            - "log_statement=mod"
            - "-c"
            - "log_min_duration_statement=1000"
            - "-c"
            - "max_connections=200"
            - "-c"
            - "shared_buffers=512MB"
            - "-c"
            - "effective_cache_size=2GB"
            - "-c"
            - "work_mem=8MB"
            - "-c"
            - "maintenance_work_mem=128MB"
            - "-c"
            - "checkpoint_completion_target=0.9"
            - "-c"
            - "wal_buffers=32MB"
            - "-c"
            - "max_wal_size=2GB"
            - "-c"
            - "min_wal_size=1GB"
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
            - name: postgresql-init-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
              readOnly: true
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: postgresql-init-scripts
          configMap:
            name: postgresql-init-scripts
            defaultMode: 0755
        - name: postgresql-config
          configMap:
            name: postgresql-config
  volumeClaimTemplates:
    - metadata:
        name: postgresql-storage
        labels:
          app: postgresql
          component: database
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        storageClassName: fast-ssd  # Adjust based on your cluster's storage classes